#!/usr/bin/env python3
"""
PDCA Shell 執行腳本
支援 Claude CLI 的 !pdca 指令前綴
"""

import sys
import json
import asyncio
from datetime import datetime
from pathlib import Path

# 添加當前目錄到 Python 路徑
sys.path.insert(0, str(Path(__file__).parent))

def create_task_file(task_description):
    """創建任務檔案供 Claude 讀取"""
    pdca_dir = Path(".pdca")
    pdca_dir.mkdir(exist_ok=True)
    
    task_data = {
        "task": task_description,
        "created_at": datetime.now().isoformat(),
        "status": "initiated",
        "source": "shell_command"
    }
    
    # 保存當前任務
    with open(pdca_dir / "current_task.json", "w", encoding="utf-8") as f:
        json.dump(task_data, f, indent=2, ensure_ascii=False)
    
    return task_data

def show_status():
    """顯示當前任務狀態"""
    pdca_dir = Path(".pdca")
    current_task_file = pdca_dir / "current_task.json"
    
    if not current_task_file.exists():
        print("📊 目前沒有進行中的 PDCA 任務")
        return
    
    with open(current_task_file, "r", encoding="utf-8") as f:
        task_data = json.load(f)
    
    print("📊 PDCA 任務狀態")
    print("=" * 40)
    print(f"任務: {task_data.get('task', 'N/A')}")
    print(f"狀態: {task_data.get('status', 'unknown')}")
    print(f"建立時間: {task_data.get('created_at', 'N/A')}")

def stop_task():
    """停止當前任務"""
    pdca_dir = Path(".pdca")
    current_task_file = pdca_dir / "current_task.json"
    
    if current_task_file.exists():
        current_task_file.unlink()
        print("🛑 PDCA 任務已停止")
    else:
        print("📊 目前沒有進行中的任務")

def show_help():
    """顯示幫助信息"""
    print("""
🎯 PDCA 多代理協調系統

使用方式：
  !pdca [任務描述]     啟動 PDCA 協調流程
  !pdca status        查看當前任務狀態
  !pdca stop          停止當前任務
  !pdca help          顯示此幫助

範例：
  !pdca 建立用戶登入系統
  !pdca 優化資料庫查詢效能
  !pdca 設計微服務架構

注意：
- 使用 ! 前綴在 Claude CLI 中執行 shell 命令
- 任務啟動後，Claude 會作為協調者接手處理
- 您可以在對話中繼續與 Claude 互動調整方向
    """)

def main():
    """主入口函數"""
    args = sys.argv[1:]
    
    if not args:
        show_help()
        return
    
    command = args[0].lower()
    
    if command == "help" or command == "--help" or command == "-h":
        show_help()
    
    elif command == "status":
        show_status()
    
    elif command == "stop":
        stop_task()
    
    elif command == "start":
        print("🚀 PDCA 系統已準備就緒")
        print("請使用 !pdca [任務描述] 來啟動具體任務")
    
    else:
        # 將第一個參數開始的所有內容視為任務描述
        task_description = " ".join(args)
        task_data = create_task_file(task_description)
        
        print("🎯 PDCA 任務已啟動")
        print("=" * 40)
        print(f"任務: {task_description}")
        print(f"時間: {task_data['created_at']}")
        print("=" * 40)
        print()
        print("📋 Claude 正在作為協調者接手處理...")
        print("💬 您可以繼續在對話中與 Claude 互動調整方向")
        print()
        print("💡 提示：")
        print("  - 使用 !pdca status 查看進度")
        print("  - 使用 !pdca stop 停止任務")
        print("  - 直接與 Claude 對話來介入和調整")

if __name__ == "__main__":
    main()